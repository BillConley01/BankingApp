{"ast":null,"code":"var _jsxFileName = \"/Users/williamconley/Documents/GitHub/BankingApp/client/src/pages/withdraw.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ATM from \"../components/ATM\";\nimport Card from \"../components/card.js\";\nimport Welcome from \"../components/welcome\";\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Withdraw = () => {\n  _s();\n\n  //state for amount and email\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = React.useState(0.00); //sets account balance\n\n  const [total, setTotal] = useState(0); //sets atm component status to withdraw\n\n  const [atmMode, setAtmMode] = React.useState(\"Cash Back\"); //state to enable and disable submit button\n\n  const [validTransaction, setValidTransaction] = React.useState(false); // Clears input field after form is submitted or ATM mode Changed\n\n  const [value, setValue] = React.useState(\"\"); //displays balance amount\n\n  let status = `Balance: $${Number(total).toFixed(2)} `;\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    setAmount(Number(event.target.value));\n\n    if (event.target.value <= 0) {\n      alert(\"Enter a Positive Value!\");\n      setValidTransaction(false);\n    } else if (Number(event.target.value) > total) {\n      alert(\"Insufficient Balance!\");\n      setValidTransaction(false);\n    } else setValidTransaction(true);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const balance = localStorage.getItem('token2');\n    const user = jwt.decode(token);\n\n    if (user.email && balance) {\n      setEmail(user.email);\n      setTotal(balance);\n      console.log(user.email);\n      console.log(balance);\n    } else {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"token2\");\n    }\n  }, []); //handles submit events\n\n  const handleSubmit = event => {\n    if (Number(amount) <= total && Number(amount) >= 0) {\n      fetch(`/account/update/${email}/-${amount}`).then(response => response.text()).then(text => {\n        try {\n          const data = JSON.parse(text);\n          const balance = data.value.balance - amount;\n          setTotal(balance);\n          localStorage.setItem(\"token2\", balance);\n        } catch (err) {\n          console.log(\"err:\", text);\n        }\n      });\n      alert(`$${amount.toFixed(2)} Succesfully Withdrawn!`);\n      setValidTransaction(false);\n    } else {\n      setValidTransaction(false); //insufficient balance message\n\n      alert(\"Insufficient Balance!\");\n    } // Clears input field after form is submitted\n\n\n    setValue(\"\");\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"withdrawal-page p-3\",\n      hdrcolor: \"greenyellow\",\n      hdrtext: \"#282c34\",\n      bodycolor: \"dodgerblue\",\n      bodytext: \"#282c34\",\n      header: \"Withdrawals\",\n      title: status,\n      text: \"Enter Withdrawal Amount\",\n      body: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-center\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(ATM, {\n          onChange: handleChange,\n          atmMode: atmMode,\n          validTransaction: validTransaction,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Withdraw, \"jS8IySq/YLK/byemi/FF2EjmdUE=\");\n\n_c = Withdraw;\nexport default Withdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"names":["React","useEffect","useState","ATM","Card","Welcome","jwt","Withdraw","email","setEmail","amount","setAmount","total","setTotal","atmMode","setAtmMode","validTransaction","setValidTransaction","value","setValue","status","Number","toFixed","handleChange","event","target","alert","token","localStorage","getItem","balance","user","decode","console","log","removeItem","handleSubmit","fetch","then","response","text","data","JSON","parse","setItem","err","preventDefault"],"sources":["/Users/williamconley/Documents/GitHub/BankingApp/client/src/pages/withdraw.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ATM from \"../components/ATM\";\nimport Card from \"../components/card.js\";\nimport Welcome from \"../components/welcome\";\nimport jwt from 'jsonwebtoken';\n\nconst Withdraw = () => {\n  //state for amount and email\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = React.useState(0.00);\n  //sets account balance\n  const [total, setTotal] = useState(0);\n  \n  //sets atm component status to withdraw\n  const [atmMode, setAtmMode] = React.useState(\"Cash Back\");\n  //state to enable and disable submit button\n  const [validTransaction, setValidTransaction] = React.useState(false);\n  // Clears input field after form is submitted or ATM mode Changed\n  const [value, setValue] = React.useState(\"\");\n  //displays balance amount\n  let status = `Balance: $${Number(total).toFixed(2)} `;\n\n    const handleChange = (event) => {\n      setValue(event.target.value);\n      setAmount(Number(event.target.value));\n      if(event.target.value<=0){\n        alert(\"Enter a Positive Value!\");\n        setValidTransaction(false);\n      } else if(Number(event.target.value) >total){\n        alert(\"Insufficient Balance!\");\n        setValidTransaction(false);\n      } else setValidTransaction(true);\n    };\n\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n      const balance = localStorage.getItem('token2');\n      const user = jwt.decode(token);\n      if (user.email && balance) {\n        setEmail(user.email);\n        setTotal(balance);\n        console.log(user.email);\n        console.log(balance);\n      } else {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"token2\");\n      }\n    }, []);\n    \n    //handles submit events\n    const handleSubmit = (event) => {\n      if(Number(amount) <=total && Number(amount) >= 0){\n        fetch(`/account/update/${email}/-${amount}`)\n        .then((response) => response.text())\n        .then((text) => {\n          try {\n            const data = JSON.parse(text);\n            const balance = data.value.balance - amount;\n            setTotal(balance);\n            localStorage.setItem(\"token2\", balance);\n          } catch (err) {\n            console.log(\"err:\", text);\n          }\n        });\n        alert(`$${amount.toFixed(2)} Succesfully Withdrawn!`);\n        setValidTransaction(false);\n      }else {\n        setValidTransaction(false);\n        //insufficient balance message\n        alert(\"Insufficient Balance!\");\n      } \n      // Clears input field after form is submitted\n      setValue(\"\");\n      event.preventDefault();\n    };\n    \n    return (\n        <>\n        <Welcome/>\n        <Card \n        className=\"withdrawal-page p-3\"\n        hdrcolor=\"greenyellow\"\n        hdrtext=\"#282c34\"\n        bodycolor=\"dodgerblue\"\n        bodytext=\"#282c34\"\n        header=\"Withdrawals\"\n        title={status}\n        text=\"Enter Withdrawal Amount\"\n        body={\n          <form \n          className=\"text-center\"\n          onSubmit={handleSubmit}>\n            <ATM onChange={handleChange} atmMode={atmMode} validTransaction={validTransaction} value={value}/>\n          </form>\n        }>\n      </Card>\n      </>\n    );\n  };\nexport default Withdraw;"],"mappings":"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"},"metadata":{},"sourceType":"module"}