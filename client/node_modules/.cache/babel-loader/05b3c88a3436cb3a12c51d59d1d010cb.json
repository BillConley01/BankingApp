{"ast":null,"code":"var _jsxFileName = \"/Users/williamconley/Documents/GitHub/BankingApp/client/src/pages/deposit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ATM from \"../components/ATM\";\nimport Card from \"../components/card.js\";\nimport Welcome from \"../components/welcome\";\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Deposit = () => {\n  _s();\n\n  //state for amount and email\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(0.0); //sets account balance\n\n  const [total, setTotal] = useState(0); //sets atm component status to deposit\n\n  const [atmMode, setAtmMode] = useState(\"Deposit\"); //state to enable and disable submit button\n\n  const [validTransaction, setValidTransaction] = useState(false); // Clears input field after form is submitted or ATM mode Changed\n\n  const [value, setValue] = useState(\"\"); //displays balance message\n\n  let status = `Balance: $${Number(total).toFixed(2)} `; //handles change events\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    setAmount(Number(event.target.value));\n\n    if (event.target.value <= 0) {\n      alert(\"Enter a Positive Value!\");\n      setValidTransaction(false);\n    } else setValidTransaction(true);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = jwt.decode(token);\n\n    if (user.email && user.balance) {\n      setEmail(user.email);\n      setTotal(user.balance);\n      console.log(user.email);\n      console.log(user.balance);\n    } else {\n      localStorage.removeItem(\"token\");\n    }\n  }, []); //handles submit events\n\n  const handleSubmit = () => {\n    if (atmMode == \"Deposit\" && Number(amount) >= 0) {\n      fetch(`/account/update/${email}/${amount}`).then(response => response.text()).then(text => {\n        try {\n          const data = JSON.parse(text);\n          const balance = data.value.balance + amount;\n          setTotal(balance);\n          localStorage.setItem(\"token2\", balance);\n        } catch (err) {\n          console.log(\"err:\", text);\n        }\n      });\n      alert(`$${amount.toFixed(2)} Succesfully Deposited!`);\n      setValidTransaction(false);\n    } else {\n      alert(`Unable to Process Negative Values!`);\n    } // Clears input field after form is submitted\n\n\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"deposit-page p-3\",\n      hdrcolor: \"greenyellow\",\n      hdrtext: \"#282c34\",\n      bodycolor: \"dodgerblue\",\n      bodytext: \"#282c34\",\n      header: \"Deposits\",\n      title: status,\n      text: \"Enter Deposit Amount\",\n      body: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-center\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(ATM, {\n          onChange: handleChange,\n          atmMode: atmMode,\n          validTransaction: validTransaction,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Deposit, \"PQhxkLU/sJnTH0GwYapY5UR/cUs=\");\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["React","useEffect","useState","ATM","Card","Welcome","jwt","Deposit","email","setEmail","amount","setAmount","total","setTotal","atmMode","setAtmMode","validTransaction","setValidTransaction","value","setValue","status","Number","toFixed","handleChange","event","target","alert","token","localStorage","getItem","user","decode","balance","console","log","removeItem","handleSubmit","fetch","then","response","text","data","JSON","parse","setItem","err"],"sources":["/Users/williamconley/Documents/GitHub/BankingApp/client/src/pages/deposit.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ATM from \"../components/ATM\";\nimport Card from \"../components/card.js\";\nimport Welcome from \"../components/welcome\";\nimport jwt from 'jsonwebtoken';\nconst Deposit = () => {\n  //state for amount and email\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(0.0);\n  //sets account balance\n  const [total, setTotal] = useState(0);\n  //sets atm component status to deposit\n  const [atmMode, setAtmMode] = useState(\"Deposit\");\n  //state to enable and disable submit button\n  const [validTransaction, setValidTransaction] = useState(false);\n  // Clears input field after form is submitted or ATM mode Changed\n  const [value, setValue] = useState(\"\");\n  //displays balance message\n  let status = `Balance: $${Number(total).toFixed(2)} `;\n\n  //handles change events\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setAmount(Number(event.target.value));\n    if (event.target.value <= 0) {\n      alert(\"Enter a Positive Value!\");\n      setValidTransaction(false);\n    } else setValidTransaction(true);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    const user = jwt.decode(token)\n    if (user.email && user.balance) {\n      setEmail(user.email);\n      setTotal(user.balance);\n      console.log(user.email);\n      console.log(user.balance);\n    } else {\n      localStorage.removeItem(\"token\");\n    }\n  }, []);\n  \n  //handles submit events\n  const handleSubmit = () => {\n    if (atmMode == \"Deposit\" && Number(amount) >= 0) {\n      fetch(`/account/update/${email}/${amount}`)\n        .then((response) => response.text())\n        .then((text) => {\n          try {\n            const data = JSON.parse(text);\n            const balance = data.value.balance + amount;\n            setTotal(balance);\n            localStorage.setItem(\"token2\", balance);\n          } catch (err) {\n            console.log(\"err:\", text);\n          }\n        });\n      alert(`$${amount.toFixed(2)} Succesfully Deposited!`);\n      setValidTransaction(false);\n    } else {\n      alert(`Unable to Process Negative Values!`);\n    }\n    // Clears input field after form is submitted\n    setValue(\"\");\n  };\n\n  return (\n    <>\n    <Welcome/>\n    <Card\n      className=\"deposit-page p-3\"\n      hdrcolor=\"greenyellow\"\n      hdrtext=\"#282c34\"\n      bodycolor=\"dodgerblue\"\n      bodytext=\"#282c34\"\n      header=\"Deposits\"\n      title={status}\n      text=\"Enter Deposit Amount\"\n      body={\n        <form className=\"text-center\" onSubmit={handleSubmit}>\n          <ATM\n            onChange={handleChange}\n            atmMode={atmMode}\n            validTransaction={validTransaction}\n            value={value}\n          />\n        </form>\n      }\n    ></Card>\n    </>\n  );\n};\nexport default Deposit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}