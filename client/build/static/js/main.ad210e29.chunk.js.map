{"version":3,"sources":["components/navbar.js","components/card.js","components/welcome.js","pages/home.js","components/ATM.js","pages/withdraw.js","pages/alldata.js","pages/createaccount.js","pages/login.js","pages/deposit.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","status","navigate","useNavigate","className","href","type","id","onClick","localStorage","clear","alert","Card","props","style","maxWidth","minWidth","margin","backgroundColor","bodycolor","hdrcolor","color","hdrtext","header","bodytext","title","text","body","Welcome","useState","getItem","name","Home","src","alt","ATM","onChange","atmMode","validTransaction","value","disabled","Withdraw","amount","setAmount","total","setTotal","setValidTransaction","setValue","Number","toFixed","useEffect","balance","console","log","removeItem","onSubmit","event","fetch","headers","then","response","JSON","parse","setItem","err","preventDefault","target","AllData","users","setUsers","json","data","list","map","user","index","email","scope","CreateSuccess","setShow","CreateForm","setName","setEmail","password","setPassword","enableSubmit","validate","field","label","setStatus","setTimeout","clearForm","placeholder","e","currentTarget","length","url","a","res","CreateAccount","show","LoginSuccess","LoginForm","autoComplete","token","jwt","decode","Login","Deposit","App","setInterval","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.ad210e29.chunk.js","sourcesContent":["import { useNavigate } from \"react-router-dom\";\n\nconst NavBar = ({ status }) => {\n  const navigate = useNavigate();\n  const logout = () => {\n    localStorage.clear();\n    navigate(\"/login\");\n    alert(`Logout Successful!`);\n  };\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg app-navbar\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand app-brand mx-2\" href=\"#/\">\n            iBank\n          </a>\n          <button\n            className=\"navbar-toggler navbar-light\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbar\"\n            aria-controls=\"navbar\"\n            aria-expanded=\"true\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbar\">\n            {status ? (\n              <ul className=\"navbar-nav navbar-light flex-column flex-md-row ms-auto\">\n                <li className=\"nav-item px-1\">\n                  <a className=\"nav-link nav-pages active\" href=\"#/\">\n                    Home\n                  </a>\n                </li>\n                <li className=\"nav-item px-1\">\n                  <a className=\"nav-link nav-pages\" href=\"#/deposit/\">\n                    Deposit\n                  </a>\n                </li>\n                <li className=\"nav-item px-1\">\n                  <a className=\"nav-link nav-pages\" href=\"#/withdraw/\">\n                    Withdraw\n                  </a>\n                </li>\n                <li className=\"nav-item px-1\">\n                  <a className=\"nav-link nav-pages\" href=\"#/alldata/\">\n                    Balance\n                  </a>\n                </li>\n                <li className=\"nav-item px-1\">\n                  <button\n                    className=\"nav-link nav-pages logout\"\n                    href=\"#/logout/\"\n                    onClick={logout}\n                  >\n                    Logout\n                  </button>\n                </li>\n              </ul>\n            ) : (\n              <ul className=\"navbar-nav navbar-light flex-column flex-md-row ms-auto\">\n                <li className=\"nav-item px-1\">\n                  <a className=\"nav-link nav-pages active\" href=\"#/\">\n                    Home\n                  </a>\n                </li>\n                <li className=\"nav-item px-1\">\n                  <a className=\"nav-link nav-pages\" href=\"#/login/\">\n                    Login\n                  </a>\n                </li>\n                <li className=\"nav-item px-1\">\n                  <a className=\"nav-link nav-pages\" href=\"#/createaccount/\">\n                    Create Account\n                  </a>\n                </li>\n              </ul>\n            )}\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\nexport default NavBar;\n","const Card = (props) => {\n\n    return (\n        <div className=\"main-card\" style={{maxWidth:\"100%\", minWidth:\"350px\", margin:\"1rem\", backgroundColor:`${props.bodycolor}`}}>\n            <div className=\"card-header\" style={{backgroundColor:`${props.hdrcolor}`, color:`${props.hdrtext}`}}>{props.header}</div>\n            <div className=\"card-body\" style={{color:`${props.bodytext}`}}>\n                {props.title && (<h4 className=\"card-title\">{props.title}</h4>)}\n                {props.text && (<p className=\"card-text\">{props.text}</p>)}\n                {props.body}\n                {props.status && (<div id=\"createStatus\">{props.status}</div>)}\n            </div>\n        </div>\n    );\n}\nexport default Card;","import { useState } from \"react\";\nconst Welcome = () => {\n  const [name] = useState(localStorage.getItem(\"token1\"));\n\n  return (\n    <>\n      {name ? <p className=\"welcome\">Welcome {name}!</p> :<></>}\n    </>\n  );\n};\nexport default Welcome;\n","import React from 'react';\nimport Card from \"../components/card.js\";\nimport Welcome from '../components/welcome.js';\n\nconst Home = () => {\n    return (\n   <>\n   <Welcome/>\n   <Card \n   className=\"home-page\"\n   hdrcolor=\"greenyellow\"\n   hdrtext=\"#282c34\"\n   bodycolor=\"dodgerblue\"\n   bodytext=\"#282c34\"\n   header=\"Welcome to iBank\"\n   title=\"Banking Made Easy\"\n   text=\"For all your internet Bankings needs!\"\n   body={(<img src=\"bank.png\" \n            className=\"img-fluid w-75\" \n            alt=\"Bank\"/>)}\n   />\n   </>\n    );\n}\nexport default Home;","\nconst ATM = ({ onChange, atmMode, validTransaction, value }) => {\n      if(atmMode !== \"\")  {  return (\n            <div>\n              <input id=\"number-input\" type=\"number\" value={value} onChange={onChange}></input>\n              <input className=\"button mx-1\" type=\"submit\" value=\"Submit\" disabled={!validTransaction} id=\"submit-input\"></input>\n            </div>\n          );\n    } else return <></>;\n  };\n\n  export default ATM;","import React, { useEffect, useState } from \"react\";\nimport ATM from \"../components/ATM\";\nimport Card from \"../components/card.js\";\nimport Welcome from \"../components/welcome\";\n\nconst Withdraw = () => {\n  //state for amount and email\n  const [amount, setAmount] = useState(0.0);\n  //sets account balance\n  const [total, setTotal] = useState(0);\n  //sets atm component status to withdraw\n  const [atmMode] = useState(\"Cash Back\");\n  //state to enable and disable submit button\n  const [validTransaction, setValidTransaction] = useState(false);\n  // Clears input field after form is submitted or ATM mode Changed\n  const [value, setValue] = useState(\"\");\n  //displays balance amount\n  let status = `Balance: $${Number(total).toFixed(2)} `;\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setAmount(Number(event.target.value));\n    if (event.target.value <= 0) {\n      alert(\"Enter a Positive Value!\");\n      setValidTransaction(false);\n    } else if (Number(event.target.value) > total) {\n      alert(\"Insufficient Balance!\");\n      setValidTransaction(false);\n    } else setValidTransaction(true);\n  };\n\n  useEffect(() => {\n    const balance = localStorage.getItem(\"token2\");\n    if (balance) {\n      setTotal(balance);\n      console.log(balance);\n    } else {\n      localStorage.removeItem(\"token2\");\n    }\n  }, []);\n\n  //handles submit events\n  const handleSubmit = (event) => {\n    if (Number(amount) <= total && Number(amount) >= 0) {\n      fetch(`/account/update/-${amount}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n        .then((response) => response.text())\n        .then((text) => {\n          try {\n            const data = JSON.parse(text);\n            const balance = data.value.balance - amount;\n            setTotal(balance);\n            localStorage.setItem(\"token2\", balance);\n          } catch (err) {\n            console.log(\"err:\", text);\n          }\n        });\n      alert(`$${amount.toFixed(2)} Succesfully Withdrawn!`);\n      setValidTransaction(false);\n    } else {\n      setValidTransaction(false);\n      //insufficient balance message\n      alert(\"Insufficient Balance!\");\n    }\n    // Clears input field after form is submitted\n    setValue(\"\");\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <Welcome />\n      <Card\n        className=\"withdrawal-page p-3\"\n        hdrcolor=\"greenyellow\"\n        hdrtext=\"#282c34\"\n        bodycolor=\"dodgerblue\"\n        bodytext=\"#282c34\"\n        header=\"Withdrawals\"\n        title={status}\n        text=\"Enter Withdrawal Amount\"\n        body={\n          <form className=\"text-center\" onSubmit={handleSubmit}>\n            <ATM\n              onChange={handleChange}\n              atmMode={atmMode}\n              validTransaction={validTransaction}\n              value={value}\n            />\n          </form>\n        }\n      ></Card>\n    </>\n  );\n};\nexport default Withdraw;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/card.js\";\nimport Welcome from \"../components/welcome.js\";\n\nconst AllData = () => {\n  // state for users array\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    // fetch user accounts from API\n    fetch(`/account/find`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setUsers(data);\n      });\n  }, []);\n\n  let list = users.map((user, index) => {\n    return (\n      <tr key={index}>\n        <td className=\"fs-6 text-wrap\">{user.name}</td>\n        <td className=\"fs-6 text-wrap\">{user.email}</td>\n        <td className=\"fs-6 text-wrap\">${user.balance}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <>\n      <Welcome />\n      <Card\n        className=\"withdrawal-page p-3\"\n        hdrcolor=\"greenyellow\"\n        hdrtext=\"#282c34\"\n        bodycolor=\"dodgerblue\"\n        bodytext=\"#282c34\"\n        header=\"All Data\"\n        body={\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"fs-6\" scope=\"col\">\n                  Name\n                </th>\n                <th className=\"fs-6\" scope=\"col\">\n                  Email\n                </th>\n                <th className=\"fs-6\" scope=\"col\">\n                  Balance\n                </th>\n              </tr>\n            </thead>\n            <tbody>{list}</tbody>\n          </table>\n        }\n      ></Card>\n    </>\n  );\n};\nexport default AllData;\n","import { useState } from \"react\";\nimport Card from \"../components/card.js\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst CreateAccount = () => {\n  //shows input fields and hides them after from submitted\n  const [show, setShow] = useState(true);\n  //sets error messsage\n  const [status, setStatus] = useState(\"\");\n\n  return (\n    <Card\n      hdrcolor=\"greenyellow\"\n      hdrtext=\"#282c34\"\n      bodycolor=\"dodgerblue\"\n      bodytext=\"#282c34\"\n      header=\"Create Account\"\n      status={status}\n      body={\n        show ? (\n          <CreateForm setShow={setShow} setStatus={setStatus} />\n        ) : (\n          <CreateSuccess setShow={setShow} />\n        )\n      }\n    />\n  );\n};\nfunction CreateSuccess(props) {\n  return (\n    <>\n      <h5>Success</h5>\n      <button\n        type=\"submit\"\n        className=\"btn btn-light\"\n        onClick={() => props.setShow(true)}\n      >\n        Add another account\n      </button>\n    </>\n  );\n}\nconst CreateForm = (props) => {\n  //sets user properties\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //for enabling submit button\n  const [validTransaction, setValidTransaction] = useState(false);\n\n  //to navigate to login page\n  const navigate = useNavigate();\n\n  const handleCreate = () => {\n    console.log(name, email, password);\n    if (!validate(name, \"name\")) return;\n    if (!validate(email, \"email\")) return;\n    if (!validate(password, \"password\")) return;\n    if (password.length < 8) {\n      alert(\"Password Requires a minimum of 8 Characters!\");\n      return;\n    }\n    const url = `/account/create/${name}/${email}/${password}`;\n    (async () => {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n    })();\n  \n    alert(\"Account Successfully Created!\");\n    clearForm();\n    props.setShow(false);\n    navigate(\"/login\");\n  };\n\n  const enableSubmit = () => {\n    if (name === \"\" || email === \"\" || password === \"\") {\n      setValidTransaction(false);\n    } else setValidTransaction(true);\n    console.log(`valid ${validTransaction}`);\n  };\n\n  const validate = (field, label) => {\n    if (!field) {\n      props.setStatus(\"Error: \" + label);\n      setTimeout(() => props.setStatus(\"\"), 3000);\n      return false;\n    }\n    return true;\n  };\n\n  const clearForm = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setValidTransaction(false);\n  };\n\n  return (\n    <form>\n      <label>Name</label>\n      <input\n        type=\"input\"\n        className=\"form-control\"\n        id=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={(e) => {\n          setName(e.currentTarget.value);\n          enableSubmit();\n        }}\n      />\n      <label>Email address</label>\n      <input\n        type=\"input\"\n        className=\"form-control\"\n        id=\"email\"\n        placeholder=\"Enter email\"\n        value={email}\n        onChange={(e) => {\n          setEmail(e.currentTarget.value);\n          enableSubmit();\n        }}\n      />\n      <label>Password</label>\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        id=\"password\"\n        placeholder=\"Enter password\"\n        value={password}\n        onChange={(e) => {\n          setPassword(e.currentTarget.value);\n          enableSubmit();\n        }}\n      />\n      <br />\n      <button\n        type=\"submit\"\n        className=\"btn btn-light ml-auto\"\n        disabled={!validTransaction}\n        onClick={handleCreate}\n      >\n        Create Account\n      </button>\n    </form>\n  );\n};\nexport default CreateAccount;\n","import { useState } from \"react\";\nimport Card from \"../components/card.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nconst Login = () => {\n  //shows input fields and hides them after from submitted\n  const [show, setShow] = useState(true);\n  //sets error messsage\n  const [status, setStatus] = useState(\"\");\n\n  return (\n    <Card\n      hdrcolor=\"greenyellow\"\n      hdrtext=\"#282c34\"\n      bodycolor=\"dodgerblue\"\n      bodytext=\"#282c34\"\n      header=\"Login\"\n      status={status}\n      body={\n        show ? (\n          <LoginForm setShow={setShow} setStatus={setStatus} />\n        ) : (\n          <LoginSuccess setShow={setShow} setStatus={setStatus} />\n        )\n      }\n    />\n  );\n};\nfunction LoginSuccess(props) {\n  return (\n    <>\n      <h5>Success</h5>\n      <button\n        type=\"submit\"\n        className=\"btn btn-light\"\n        onClick={() => props.setShow(true)}\n      >\n        Logout\n      </button>\n    </>\n  );\n}\nconst LoginForm = (props) => {\n  //sets user properties\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //for enabling submit button\n  const [validTransaction, setValidTransaction] = useState(false);\n  //for redirect after login\n  const navigate = useNavigate();\n  \n  const handleLogin = () => {\n    if (!validate(email, \"email\")) return;\n    if (!validate(password, \"password\")) return;\n    if (password.length < 8) {\n      alert(\"Password Requires a minimum of 8 Characters!\");\n      return;\n    }\n    fetch(`/account/login/${email}/${password}`)\n      .then((response) => response.text())\n      .then((text) => {\n        try {\n          const data = JSON.parse(text)\n          localStorage.setItem(\"token\", data.user);\n          const token = localStorage.getItem(\"token\");\n          const user = jwt.decode(token);\n          localStorage.setItem(\"token1\", user.name);\n          localStorage.setItem(\"token2\", user.balance);\n          props.setStatus(\"\");\n          props.setShow(false);\n          alert(`Login Successful, Welcome back ${user.name}!`);\n          props.setShow(false);\n          clearForm();\n          navigate(\"/\");\n        } catch (err) {\n          props.setStatus(text);\n          console.log(\"err:\", text);\n        }\n      });\n  };\n\n  const enableSubmit = () => {\n    if (email === \"\" || password === \"\") {\n      setValidTransaction(false);\n    } else setValidTransaction(true);\n  };\n\n  const validate = (field, label) => {\n    if (!field) {\n      props.setStatus(\"Error: \" + label);\n      setTimeout(() => props.setStatus(\"\"), 3000);\n      return false;\n    }\n    return true;\n  };\n\n  const clearForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setValidTransaction(false);\n  };\n\n  return (\n    <form>\n      <label>Email address</label>\n      <input\n        type=\"input\"\n        className=\"form-control\"\n        id=\"email\"\n        placeholder=\"Enter email\"\n        value={email}\n        onChange={(e) => {\n          setEmail(e.currentTarget.value);\n          enableSubmit();\n        }}\n      />\n      <label>Password</label>\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        id=\"password\"\n        placeholder=\"Enter password\"\n        autoComplete=\"current-password\"\n        value={password}\n        onChange={(e) => {\n          setPassword(e.currentTarget.value);\n          enableSubmit();\n        }}\n      />\n      <br />\n      <button\n        type=\"submit\"\n        className=\"form-control btn btn-light mb-1 mt-0\"\n        disabled={!validTransaction}\n        onClick={handleLogin}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport ATM from \"../components/ATM\";\nimport Card from \"../components/card.js\";\nimport Welcome from \"../components/welcome\";\n\nconst Deposit = () => {\n  //state for amount\n  const [amount, setAmount] = useState(0.0);\n  //sets account balance\n  const [total, setTotal] = useState(0);\n  //sets atm component status to deposit\n  const [atmMode] = useState(\"Deposit\");\n  //state to enable and disable submit button\n  const [validTransaction, setValidTransaction] = useState(false);\n  // Clears input field after form is submitted or ATM mode Changed\n  const [value, setValue] = useState(\"\");\n  //displays balance message\n  let status = `Balance: $${Number(total).toFixed(2)} `;\n\n  //handles change events\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    setAmount(Number(event.target.value));\n    if (event.target.value <= 0) {\n      alert(\"Enter a Positive Value!\");\n      setValidTransaction(false);\n    } else setValidTransaction(true);\n  };\n\n  useEffect(() => {\n    const balance = localStorage.getItem(\"token2\");\n    if (balance) {\n      setTotal(balance);\n      console.log(balance);\n    } else {\n      localStorage.removeItem(\"token2\");\n    }\n  }, []);\n\n  //handles submit events\n  const handleSubmit = (event) => {\n    if (atmMode === \"Deposit\" && Number(amount) >= 0) {\n      fetch(`/account/update/${amount}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      })\n        .then((response) => response.text())\n        .then((text) => {\n          try {\n            const data = JSON.parse(text);\n            const balance = data.value.balance + amount;\n            setTotal(balance);\n            localStorage.setItem(\"token2\", balance);\n          } catch (err) {\n            console.log(\"err:\", text);\n          }\n        });\n      alert(`$${amount.toFixed(2)} Succesfully Deposited!`);\n      setValidTransaction(false);\n    } else {\n      alert(`Unable to Process Negative Values!`);\n    }\n    // Clears input field after form is submitted\n    setValue(\"\");\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <Welcome />\n      <Card\n        className=\"deposit-page p-3\"\n        hdrcolor=\"greenyellow\"\n        hdrtext=\"#282c34\"\n        bodycolor=\"dodgerblue\"\n        bodytext=\"#282c34\"\n        header=\"Deposits\"\n        title={status}\n        text=\"Enter Deposit Amount\"\n        body={\n          <form className=\"text-center\" onSubmit={handleSubmit}>\n            <ATM\n              onChange={handleChange}\n              atmMode={atmMode}\n              validTransaction={validTransaction}\n              value={value}\n            />\n          </form>\n        }\n      ></Card>\n    </>\n  );\n};\nexport default Deposit;\n","import React, { useEffect, useState } from \"react\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport NavBar from \"./components/navbar.js\";\nimport Home from \"./pages/home\";\nimport Withdraw from \"./pages/withdraw\";\nimport AllData from \"./pages/alldata\";\nimport CreateAccount from \"./pages/createaccount\";\nimport Login from \"./pages/login\";\nimport Deposit from \"./pages/deposit\";\n\nfunction App() {\n  const [status, setStatus] = useState(null);\n  useEffect(() => {\n    setInterval(() => {\n      setStatus(localStorage.getItem(\"token\"));\n    }, 3000);\n  }, []);\n  \n  return (\n    <HashRouter>\n      <NavBar status={status} />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/login/\" element={<Login />} />\n        <Route path=\"/createaccount/\" element={<CreateAccount />} />\n        <Route path=\"/deposit/\" element={status ? <Deposit /> : <Login />} />\n        <Route path=\"/withdraw/\" element={status ? <Withdraw /> : <Login />} />\n        <Route path=\"/alldata/\" element={status ? <AllData /> : <Login />} />\n        <Route path=\"/logout/\" element={<Login />} />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}